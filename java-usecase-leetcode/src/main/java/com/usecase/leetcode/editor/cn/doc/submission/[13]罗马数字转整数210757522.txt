class Solution {
    public int romanToInt(String s) {
        int result = 0;
        int length = s.length();

        //当前字符值与后一个字符值比较，如果当前字符小于后一个字符，则当前字符的值为负值，否则为正值
        for (int i = 0; i < length; i++) {
            int value = romanCharToInt(s.charAt(i));

            if (i < length - 1 && value < romanCharToInt(s.charAt(i + 1))) {
                result = result - value;
            } else {
                result = result + value;
            }
        }

        return result;
    }

    private int romanCharToInt(char ch) {
        switch (ch) {
            case 'I':
                return 1;
            case 'V':
                return 5;
            case 'X':
                return 10;
            case 'L':
                return 50;
            case 'C':
                return 100;
            case 'D':
                return 500;
            case 'M':
                return 1000;
            default:
                return 0;
        }
    }
}

//runtime:4 ms
//memory:38.6 MB
